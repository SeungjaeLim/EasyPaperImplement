{"version":3,"sources":["InputField.js","TextareaField.js","DropdownField.js","ImplementButton.js","PaperDetail.js","App.js","reportWebVitals.js","index.js"],"names":["InputField","_ref","label","value","onChange","React","createElement","className","type","e","target","TextareaField","DropdownField","options","map","opt","key","ImplementButton","onClick","PaperDetail","App","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","pseudoCode","setPseudoCode","_useState5","_useState6","description","setDescription","_useState7","_useState8","language","setLanguage","_useState9","_useState10","result","setResult","_useState11","_useState12","currentTab","setCurrentTab","Fragment","htmlFor","TextareaAutosize","minRows","maxRows","id","concat","lastUpdated","paper","href","rel","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.93f8efc2.chunk.js","sourcesContent":["// src/InputField.js\r\n\r\nimport React from 'react';\r\n\r\nfunction InputField({ label, value, onChange }) {\r\n    return (\r\n        <div className=\"inputField\">\r\n            <label>{label}</label>\r\n            <input type=\"text\" value={value} onChange={e => onChange(e.target.value)} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputField;\r\n","// src/TextareaField.js\r\n\r\nimport React from 'react';\r\n\r\nfunction TextareaField({ label, value, onChange }) {\r\n    return (\r\n        <div className=\"textareaField\">\r\n            <label>{label}</label>\r\n            <textarea value={value} onChange={e => onChange(e.target.value)}></textarea>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TextareaField;\r\n","// src/DropdownField.js\r\n\r\nimport React from 'react';\r\n\r\nfunction DropdownField({ label, value, onChange, options }) {\r\n    return (\r\n        <div className=\"dropdownField\">\r\n            <label>{label}</label>\r\n            <select value={value} onChange={e => onChange(e.target.value)}>\r\n                {options.map(opt => <option key={opt} value={opt}>{opt}</option>)}\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DropdownField;\r\n","// src/ImplementButton.js\r\n\r\nimport React from 'react';\r\n\r\nfunction ImplementButton({ onClick }) {\r\n    return (\r\n        <button className=\"implementButton\" onClick={onClick}>Implement</button>\r\n    );\r\n}\r\n\r\nexport default ImplementButton;\r\n","import React from 'react';\r\nimport './PaperDetail.css';\r\n\r\nfunction PaperDetail() {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const id = urlParams.get('id');\r\n    const title = urlParams.get('title');\r\n    const lastUpdated = urlParams.get('lastUpdated');\r\n\r\n    return (\r\n        <div className=\"paper-detail\">\r\n            <h1>{title}</h1>\r\n            <p>Last Updated: {lastUpdated}</p>\r\n            <div className=\"implemented-code\">\r\n                {/* This is where the implemented code will go */}\r\n                {/* It's currently empty and can be filled later */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaperDetail;\r\n","import React, { useState } from 'react';\nimport InputField from './InputField';\nimport TextareaField from './TextareaField';\nimport DropdownField from './DropdownField';\nimport ImplementButton from './ImplementButton';\nimport PaperDetail from './PaperDetail';\nimport './App.css';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nfunction App() {\n    const [title, setTitle] = useState('');\n    const [pseudoCode, setPseudoCode] = useState('');\n    const [description, setDescription] = useState('');\n    const [language, setLanguage] = useState('Python');\n    const [result, setResult] = useState('');\n    const [currentTab, setCurrentTab] = useState('main');\n\n    // Sample data for \"Projects\" tab\n    const papers = [\n        { id: 1, title: \"Mastering Chess and Shogi by Self-Play with a General Reinforcement Learning Algorithm\", lastUpdated: \"2017-12-05\" },\n        { id: 2, title: \"BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding\", lastUpdated: \"2018-10-11\" },\n        { id: 3, title: \"Attention Is All You Need\", lastUpdated: \"2017-06-12\" },\n        { id: 4, title: \"U-Net: Convolutional Networks for Biomedical Image Segmentation\", lastUpdated: \"2015-05-18\" },\n        { id: 5, title: \"GANs Trained by a Two Time-Scale Update Rule Converge to a Local Nash Equilibrium\", lastUpdated: \"2017-06-10\" },\n        { id: 6, title: \"Neural Ordinary Differential Equations\", lastUpdated: \"2018-08-02\" },\n        { id: 7, title: \"You Only Look Once: Unified, Real-Time Object Detection\", lastUpdated: \"2016-06-08\" },\n        { id: 8, title: \"Deep Residual Learning for Image Recognition\", lastUpdated: \"2016-12-10\" },\n        { id: 9, title: \"Playing Atari with Deep Reinforcement Learning\", lastUpdated: \"2013-12-19\" },\n        { id: 10, title: \"VGG16 - Convolutional Network for Classification and Detection\", lastUpdated: \"2014-09-04\" },\n        { id: 11, title: \"Proximal Policy Optimization Algorithms\", lastUpdated: \"2017-06-13\" },\n        { id: 12, title: \"A Style-Based Generator Architecture for Generative Adversarial Networks\", lastUpdated: \"2018-12-12\" },\n        { id: 13, title: \"MobileNets: Efficient Convolutional Neural Networks for Mobile Vision Applications\", lastUpdated: \"2017-04-17\" },\n        { id: 14, title: \"Mastering the Game of Go without Human Knowledge\", lastUpdated: \"2017-10-18\" },\n        { id: 15, title: \"A Comprehensive Introduction to Differentiable Programming\", lastUpdated: \"2018-12-10\" },\n        { id: 16, title: \"EfficientDet: Scalable and Efficient Object Detection\", lastUpdated: \"2019-11-28\" },\n        { id: 17, title: \"WaveNet: A Generative Model for Raw Audio\", lastUpdated: \"2016-09-12\" },\n        { id: 18, title: \"Mask R-CNN\", lastUpdated: \"2017-03-20\" },\n        { id: 19, title: \"Graph Attention Networks\", lastUpdated: \"2017-10-04\" },\n        { id: 20, title: \"The Lottery Ticket Hypothesis: Finding Sparse, Trainable Neural Networks\", lastUpdated: \"2018-11-27\" }\n    ];\n    \n\n    const handleImplement = () => {\n        setResult(`Converted pseudo code for paper \"${title}\" to ${language}.`);\n    };\n\n    return (\n        <div className=\"app\">\n            <div className=\"navigation\">\n                <button className={currentTab === 'main' ? 'active' : ''} onClick={() => setCurrentTab('main')}>Main</button>\n                <button className={currentTab === 'projects' ? 'active' : ''} onClick={() => setCurrentTab('projects')}>Projects</button>\n                <button className={currentTab === 'about' ? 'active' : ''} onClick={() => setCurrentTab('about')}>About</button>\n            </div>\n\n\n            {currentTab === 'main' && (\n                <>\n                    <h1>Easy Paper Implement</h1>\n                    <InputField label=\"Paper Title\" value={title} onChange={setTitle} />\n                    <div className=\"textareaField\">\n                        <label htmlFor=\"pseudoCode\">Pseudo Code</label>\n                        <TextareaAutosize\n                            minRows={5}\n                            maxRows={30}\n                            id=\"pseudoCode\"\n                            value={pseudoCode}\n                            onChange={(e) => setPseudoCode(e.target.value)}\n                            className=\"textarea\"\n                        />\n                    </div>\n\n                    <TextareaField label=\"Paper Description\" value={description} onChange={setDescription} />\n                    <DropdownField label=\"Select Language\" value={language} onChange={setLanguage} options={['Python', 'C++', 'Java', 'Go', 'Rust']} />\n                    <ImplementButton onClick={handleImplement} />\n                    <div className=\"result\">{result}</div>\n                </>\n            )}\n\n            {currentTab === 'projects' && (\n                <div className=\"projects\">\n                    <h2>Implemented Papers</h2>\n                    <div className=\"papers-grid\">\n                        {papers.map(paper => (\n                            <div key={paper.id} className=\"paper-item\">\n                                <div className=\"paper-index\">{paper.id}</div>\n                                <div className=\"paper-title\">{paper.title}</div>\n                                <div className=\"paper-last-updated\">{paper.lastUpdated}</div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n\n            {currentTab === 'about' && (\n                <div className=\"about\">\n                    <h2>Seungjae Lim</h2>\n                    {/* GitHub Direct Button */}\n                    <a href=\"https://github.com/SeungjaeLim\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"github-button\">\n                        GitHub Profile\n                    </a>\n                    <p>\n                        I'm interested in machine learning in general. Recently, I'm interested in learning about ML systems, that can serve hyperscale AI models quickly and efficiently when applied to industry.\n                        I am a person who likes to reach new environments, have new experiences, and study new things. I want to live a life where I encounter a lot of various things.\n                    </p>\n                    \n                    \n                </div>\n            )}\n\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}